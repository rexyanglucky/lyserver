{"version":3,"sources":["../../src/bll/article.js"],"names":["ArticleBll","constructor","dbHelper","DBHelper","saveArticle","callback","data","InsertDB","collectionName","result","insertedIds","getArticle","id","QueryDB","query","_id","getArticleList","param","projection","isMD","createTime","delArticle","DeleteDB","saveArticleHistory"],"mappings":"2EAAA,oC;AACA,kC;;;AAGA,MAAMA,UAAN,CAAiB;AACbC,kBAAc;AACV,aAAKC,QAAL,GAAgB,IAAIC,eAAJ,EAAhB;AACH;AACD;;;;;AAKAC,gBAAYC,QAAZ,EAAsB,GAAGC,IAAzB,EAA+B;AAC3B,aAAKJ,QAAL,CAAcK,QAAd,CAAuB;AACnBC,4BAAgB,SADG,EACQF,MAAMA,IADd,EACoBD,UAAWI,MAAD,IAAY;AACzDJ,yBAASI,OAAOC,WAAhB;AACH,aAHkB,EAAvB;;AAKH;AACD;;;;AAIAC,eAAWN,QAAX,EAAqB,GAAGO,EAAxB,EAA4B;AACxB,aAAKV,QAAL,CAAcW,OAAd,CAAsB;AAClBL,4BAAgB,SADE,EACSM,OAAO,EAAEC,KAAK,uBAASH,GAAG,CAAH,CAAT,CAAP,EADhB,EAC0CP,UAAWI,MAAD,IAAY;AAC9EJ,yBAASI,MAAT;AACH,aAHiB,EAAtB;;AAKH;AACD;;;;AAIA;AACAO,mBAAeX,QAAf,EAAyBY,KAAzB,EAAgC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAKf,QAAL,CAAcW,OAAd,CAAsB;AAClBL,4BAAgB,SADE,EACSM,OAAO,EADhB,EACmBI,YAAW,EAACC,MAAK,CAAN,EAAQC,YAAW,CAAnB,EAD9B,EACqDf,UAAWI,MAAD,IAAY;AACzFJ,yBAASI,MAAT;AACH,aAHiB,EAAtB;;AAKH;;AAEDY,eAAWhB,QAAX,EAAqB,GAAGO,EAAxB,EAA4B;AACxB,aAAKV,QAAL,CAAcoB,QAAd,CAAuB;AACnBd,4BAAgB,SADG,EACQM,OAAO,EAAEC,KAAK,uBAASH,GAAG,CAAH,CAAT,CAAP,EADf,EACyCP,UAAWI,MAAD,IAAY;AAC9EJ,yBAASI,MAAT;AACH,aAHkB,EAAvB;;AAKH;AACD;;;;AAIAc,yBAAoB;AAChB,aAAKrB,QAAL,CAAcK,QAAd,CAAuB;AACnBC,4BAAgB,gBADG,EACeF,MAAMA,IADrB,EAC2BD,UAAWI,MAAD,IAAY;AAChEJ,yBAASI,OAAOC,WAAhB;AACH,aAHkB,EAAvB;;AAKH,KA5EY,C;;AA8EFV,U","file":"article.js","sourcesContent":["import DBHelper from \"../db/mongo\"\r\nimport { ObjectId } from 'mongodb';\r\n\r\n\r\nclass ArticleBll {\r\n    constructor() {\r\n        this.dbHelper = new DBHelper();\r\n    }\r\n    /**\r\n     * \r\n     * @param {Array} data -要保存的文章数据 {title:\"\",content:\"\",author:\"\",createTime:new Date(),updateTime:new Date()}\r\n     * @param {Function} callback -成功回调函数\r\n     */\r\n    saveArticle(callback, ...data) {\r\n        this.dbHelper.InsertDB({\r\n            collectionName: \"article\", data: data, callback: (result) => {\r\n                callback(result.insertedIds);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 获取文章\r\n     * @param {Array} id \r\n     */\r\n    getArticle(callback, ...id) {\r\n        this.dbHelper.QueryDB({\r\n            collectionName: \"article\", query: { _id: ObjectId(id[0]) }, callback: (result) => {\r\n                callback(result);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n * 获取文章\r\n * @param {Array} id \r\n */\r\n    //todo 根据post 条件获取列表\r\n    getArticleList(callback, param) {\r\n        // let query = { where: {}, sort: {}, page: { currentPage: 1, pageSize: 10 } };\r\n        // if (param) {\r\n        //     if (param.author) {\r\n        //         query.where[author] = param.author;\r\n        //     }\r\n        //     if (param.startDate) {\r\n        //         query.where[crateTime] = { \"$gte\": param.startDate };\r\n        //     }\r\n        //     if (param.endDate) {\r\n        //         query.where[crateTime] = { \"$lte\": param.endDate };\r\n        //     }\r\n        //     if (param.currentPage) {\r\n        //         query.page[currentPage] = param.currentPage;\r\n        //     }\r\n        //     if (param.pageSize) {\r\n        //         query.page[pageSize] = param.pageSize;\r\n        //     }\r\n        // }\r\n\r\n        this.dbHelper.QueryDB({\r\n            collectionName: \"article\", query: {},projection:{isMD:0,createTime:0}, callback: (result) => {\r\n                callback(result);\r\n            }\r\n        });\r\n    }\r\n\r\n    delArticle(callback, ...id) {\r\n        this.dbHelper.DeleteDB({\r\n            collectionName: \"article\", query: { _id: ObjectId(id[0]) }, callback: (result) => {\r\n                callback(result);\r\n            }\r\n        })\r\n    }\r\n    /**\r\n     * 保存文章历史记录\r\n     * \r\n     */\r\n    saveArticleHistory(){\r\n        this.dbHelper.InsertDB({\r\n            collectionName: \"articleHistory\", data: data, callback: (result) => {\r\n                callback(result.insertedIds);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default ArticleBll;"]}