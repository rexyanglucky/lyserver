{"version":3,"sources":["../../src/webserver/server.js"],"names":["http","require","url","fs","p","querystring","Router","MIME","createServer","req","res","path","parse","fpath","join","__dirname","exists","r","t","substring","lastIndexOf","toLowerCase","setHtml","setFile","setHeader","router","method","purl","param","query","resolveUrl","redirectAction","arr","on","d","push","data","Buffer","concat","toString","ret","JSON","err","body","writeHead","end","listen","console","log","readFile","hasOwnProperty","readFileSync","sleep","sleepTime","start","Date"],"mappings":"aAAA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,MAAMD,QAAQ,KAAR,CAAV,C,CAAyB;AACzB,IAAIE,KAAKF,QAAQ,IAAR,CAAT,C,CAAuB;AACvB,IAAIG,IAAIH,QAAQ,MAAR,CAAR,C,CAAwB;AACxB,IAAII,cAAcJ,QAAQ,aAAR,CAAlB,C,CAAyC;AACzC,IAAIK,SAASL,QAAQ,UAAR,CAAb,C,CAAiC;;AAEjC,IAAIM,OAAO;AACP,WAAO,UADA;AAEP,WAAO,WAFA;AAGP,YAAQ,WAHD;AAIP,WAAO,cAJA;AAKP,YAAQ,YALD;AAMP,WAAO,YANA;AAOP,UAAM,iBAPC;AAQP,YAAQ,kBARD;AASP,WAAO,iBATA;AAUP,WAAO,WAVA;AAWP,WAAO,eAXA;AAYP,WAAO,+BAZA;AAaP,YAAQ,YAbD;AAcP,WAAO,YAdA;AAeP,WAAO,aAfA;AAgBP,WAAO,gBAhBA;AAiBP,WAAO,gBAjBA;AAkBP,WAAO,UAlBA;AAmBP,WAAO,kBAnBA;AAoBP,WAAO,eApBA,EAAX;;AAsBAP,KAAKQ,YAAL,CAAkB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAClC,QAAID,IAAIP,GAAJ,IAAW,cAAf,EAA+B;AAC3B,YAAIS,OAAOT,IAAIU,KAAJ,CAAUH,IAAIP,GAAd,EAAmBS,IAA9B;AACA,YAAIA,QAAQ,GAAZ,EAAiB;AACbA,mBAAO,YAAP;AACH;AACD,YAAIE,QAAQT,EAAEU,IAAF,CAAOC,SAAP,EAAkBJ,IAAlB,CAAZ;AACAR,WAAGa,MAAH,CAAUH,KAAV,EAAiB,UAAUI,CAAV,EAAa;AAC1B,gBAAIA,CAAJ,EAAO;AACH,oBAAIC,IAAIL,MAAMM,SAAN,CAAgBN,MAAMO,WAAN,CAAkB,GAAlB,IAAyB,CAAzC,EAA4CC,WAA5C,EAAR;AACA,wBAAQH,CAAR;AACI,yBAAK,MAAL;AACA,yBAAK,KAAL;AACII,gCAAQT,KAAR,EAAeJ,GAAf,EAAoBC,GAApB;AACA;AACJ;AACIa,gCAAQV,KAAR,EAAeJ,GAAf,EAAoBC,GAApB;AACA,8BAPR;;;AAUH,aAZD;AAaK;AACD;AACA;AACAA,oBAAIc,SAAJ,CAAc,6BAAd,EAA4C,GAA5C;AACA,oBAAIC,SAAS,IAAInB,MAAJ,EAAb;AACA,oBAAIG,IAAIiB,MAAJ,KAAe,KAAnB,EAA0B;AACtB,wBAAIC,OAAOzB,IAAIU,KAAJ,CAAUH,IAAIP,GAAd,CAAX;AACAuB,2BAAOG,KAAP,GAAevB,YAAYO,KAAZ,CAAkBe,KAAKE,KAAvB,CAAf;AACAJ,2BAAOK,UAAP,CAAkBrB,IAAIP,GAAtB;AACAuB,2BAAOM,cAAP,CAAsBtB,GAAtB,EAA2BC,GAA3B;AACH,iBALD;AAMK,oBAAID,IAAIiB,MAAJ,KAAe,MAAnB,EAA2B;AAC5B,wBAAIM,MAAM,EAAV;AACAvB,wBAAIwB,EAAJ,CAAO,MAAP,EAAgBC,CAAD,IAAO,CAAEF,IAAIG,IAAJ,CAASD,CAAT,EAAa,CAArC;AACAzB,wBAAIwB,EAAJ,CAAO,KAAP,EAAc,MAAM;AAChB,4BAAIG,OAAOC,OAAOC,MAAP,CAAcN,GAAd,EAAmBO,QAAnB,EAAX,CAA0CC,GAA1C;AACA,4BAAI;AACAA,kCAAMC,KAAK7B,KAAL,CAAWwB,IAAX,CAAN;AACH,yBAFD,CAEE,OAAOM,GAAP,EAAY,CAAG;AACjBjC,4BAAIkC,IAAJ,GAAWH,GAAX;AACAf,+BAAOG,KAAP,GAAeY,GAAf;AACAf,+BAAOK,UAAP,CAAkBrB,IAAIP,GAAtB;AACAuB,+BAAOM,cAAP,CAAsBtB,GAAtB,EAA2BC,GAA3B;AACH,qBATD;AAUH;;AAEJ;;AAEJ,SA1CD;;AA4CH,KAlDD;AAmDK;AACDA,YAAIkC,SAAJ,CAAc,GAAd;AACAlC,YAAImC,GAAJ,CAAQ,aAAR;AACH;;AAEJ,CAzDD,EAyDGC,MAzDH,CAyDU,IAzDV;AA0DAC,QAAQC,GAAR,CAAY,uBAAZ;AACA;;;;;;AAMA,SAAS1B,OAAT,CAAiBX,IAAjB,EAAuBF,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7BP,OAAG8C,QAAH,CAAYtC,IAAZ,EAAkB,UAAU+B,GAAV,EAAeN,IAAf,EAAqB;AACnC,YAAIM,GAAJ,EAAS;AACLhC,gBAAIkC,SAAJ,CAAc,GAAd,EAAmB,EAAE,gBAAgB,0BAAlB,EAAnB;AACAlC,gBAAImC,GAAJ,CAAQ,QAAR;AACH,SAHD;AAIK;AACD,gBAAI3B,IAAIP,KAAKQ,SAAL,CAAeR,KAAKS,WAAL,CAAiB,GAAjB,IAAwB,CAAvC,CAAR;AACA,gBAAIb,KAAK2C,cAAL,CAAoBhC,CAApB,CAAJ,EAA4B;AACxBR,oBAAIkC,SAAJ,CAAc,GAAd,EAAmB,EAAE,gBAAgBrC,KAAKW,CAAL,CAAlB,EAAnB;AACAR,oBAAImC,GAAJ,CAAQT,KAAKG,QAAL,EAAR;AACH,aAHD;AAIK;AACD7B,oBAAIkC,SAAJ,CAAc,GAAd,EAAmB,EAAE,gBAAgB,0BAAlB,EAAnB;AACAlC,oBAAImC,GAAJ,CAAQ,WAAW3B,CAAnB;AACH;AACJ;;AAEJ,KAjBD;AAkBH;AACD;;;;;;AAMA,SAASK,OAAT,CAAiBZ,IAAjB,EAAuBF,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7B,QAAI0B,OAAOjC,GAAGgD,YAAH,CAAgBxC,IAAhB,EAAsB,QAAtB,CAAX;AACA,QAAIO,IAAIP,KAAKQ,SAAL,CAAeR,KAAKS,WAAL,CAAiB,GAAjB,IAAwB,CAAvC,CAAR;AACA,QAAIb,KAAK2C,cAAL,CAAoBhC,CAApB,CAAJ,EAA4B;AACxBR,YAAIkC,SAAJ,CAAc,GAAd,EAAmB,EAAE,gBAAgBrC,KAAKW,CAAL,CAAlB,EAAnB;AACAR,YAAImC,GAAJ,CAAQT,IAAR,EAAc,QAAd;AACH,KAHD;AAIK;AACD1B,YAAIkC,SAAJ,CAAc,GAAd,EAAmB,EAAE,gBAAgB,0BAAlB,EAAnB;AACAlC,YAAImC,GAAJ,CAAQ,WAAW3B,CAAnB;AACH;AACJ;;AAED,SAASkC,KAAT,CAAeC,SAAf,EAA0B;AACtB,SAAK,IAAIC,QAAQ,CAAC,IAAIC,IAAJ,EAAlB,EAA4B,CAAC,IAAIA,IAAJ,EAAD,GAAYD,KAAZ,IAAqBD,SAAjD,GAA6D,CAAG;AACnE","file":"server.js","sourcesContent":["var http = require('http');\r\nvar url = require(\"url\");//url模块\r\nvar fs = require(\"fs\");//文件系统模块\r\nvar p = require(\"path\");//路径\r\nvar querystring = require(\"querystring\");//参数  \r\nvar Router = require(\"./router\");//自定义路由\r\n\r\nvar MIME = {\r\n    \"css\": \"text/css\",\r\n    \"gif\": \"image/gif\",\r\n    \"html\": \"text/html\",\r\n    \"ico\": \"image/x-icon\",\r\n    \"jpeg\": \"image/jpeg\",\r\n    \"jpg\": \"image/jpeg\",\r\n    \"js\": \"text/javascript\",\r\n    \"json\": \"application/json\",\r\n    \"pdf\": \"application/pdf\",\r\n    \"png\": \"image/png\",\r\n    \"svg\": \"image/svg+xml\",\r\n    \"swf\": \"application/x-shockwave-flash\",\r\n    \"tiff\": \"image/tiff\",\r\n    \"txt\": \"text/plain\",\r\n    \"wav\": \"audio/x-wav\",\r\n    \"wma\": \"audio/x-ms-wma\",\r\n    \"wmv\": \"video/x-ms-wmv\",\r\n    \"xml\": \"text/xml\",\r\n    \"htc\": \"text/x-component\",\r\n    \"svg\": \"image/svg+xml\"\r\n}\r\nhttp.createServer(function (req, res) {\r\n    if (req.url != \"/favicon.ico\") {\r\n        var path = url.parse(req.url).path;\r\n        if (path == \"/\") {\r\n            path = \"home/index\";\r\n        }\r\n        var fpath = p.join(__dirname, path);\r\n        fs.exists(fpath, function (r) {\r\n            if (r) {\r\n                var t = fpath.substring(fpath.lastIndexOf(\".\") + 1).toLowerCase();\r\n                switch (t) {\r\n                    case \"html\":\r\n                    case \"htc\":\r\n                        setHtml(fpath, req, res);\r\n                        break;\r\n                    default:\r\n                        setFile(fpath, req, res);\r\n                        break;\r\n                }\r\n\r\n            }\r\n            else {\r\n                //todo 可为每个请求创建单独的上下文存储路由相关信息，目前暂且使用全局router\r\n                //可测试多个请求下router值变化问题\r\n                res.setHeader(\"Access-Control-Allow-Origin\",\"*\");\r\n                var router = new Router();\r\n                if (req.method === \"GET\") {\r\n                    let purl = url.parse(req.url);\r\n                    router.param = querystring.parse(purl.query);\r\n                    router.resolveUrl(req.url);\r\n                    router.redirectAction(req, res);\r\n                }\r\n                else if (req.method === \"POST\") {\r\n                    var arr = [];\r\n                    req.on(\"data\", (d) => { arr.push(d) });\r\n                    req.on(\"end\", () => {\r\n                        let data = Buffer.concat(arr).toString(), ret;\r\n                        try {\r\n                            ret = JSON.parse(data);\r\n                        } catch (err) { }\r\n                        req.body = ret;\r\n                        router.param = ret;\r\n                        router.resolveUrl(req.url);\r\n                        router.redirectAction(req, res);\r\n                    })\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    else {\r\n        res.writeHead(200);\r\n        res.end(\"favicon.ico\");\r\n    }\r\n\r\n}).listen(8001);\r\nconsole.log(\"http://127.0.0.1:8001\");\r\n/**\r\n * 设置html\r\n * @param {String} 文件路径 \r\n * @param {req} request \r\n * @param {res} response \r\n */\r\nfunction setHtml(path, req, res) {\r\n    fs.readFile(path, function (err, data) {\r\n        if (err) {\r\n            res.writeHead(500, { 'Content-Type': 'text/plain;charset:utf-8' });\r\n            res.end(\"加载文件失败\");\r\n        }\r\n        else {\r\n            var t = path.substring(path.lastIndexOf(\".\") + 1);\r\n            if (MIME.hasOwnProperty(t)) {\r\n                res.writeHead(200, { 'Content-Type': MIME[t] });\r\n                res.end(data.toString());\r\n            }\r\n            else {\r\n                res.writeHead(200, { 'Content-Type': 'text/plain;charset:utf-8' });\r\n                res.end(\"文件类型错误\" + t);\r\n            }\r\n        }\r\n\r\n    })\r\n}\r\n/**\r\n * 处理二进制文件\r\n * @param {String} path \r\n * @param {req} req \r\n * @param {res} res \r\n */\r\nfunction setFile(path, req, res) {\r\n    var data = fs.readFileSync(path, \"binary\");\r\n    var t = path.substring(path.lastIndexOf(\".\") + 1);\r\n    if (MIME.hasOwnProperty(t)) {\r\n        res.writeHead(200, { 'Content-Type': MIME[t] });\r\n        res.end(data, \"binary\");\r\n    }\r\n    else {\r\n        res.writeHead(200, { 'Content-Type': 'text/plain;charset:utf-8' });\r\n        res.end(\"文件类型错误\" + t);\r\n    }\r\n}\r\n\r\nfunction sleep(sleepTime) {\r\n    for (var start = +new Date; +new Date - start <= sleepTime;) { }\r\n}\r\n"]}