{"version":3,"sources":["../../src/webserver/server.js"],"names":["http","require","url","fs","p","querystring","Router","FileFrom","MIME","createServer","req","res","path","parse","pathname","fpath","join","__dirname","exists","r","t","substring","lastIndexOf","toLowerCase","setHtml","setFile","setHeader","router","method","purl","param","query","resolveUrl","redirectAction","arr","on","d","push","console","log","headers","indexOf","bufferData","Buffer","concat","objList","GetFromList","files","map","item","index","name","filename","Content","data","toString","ret","JSON","err","body","writeHead","end","listen","readFile","hasOwnProperty","readFileSync","sleep","sleepTime","start","Date"],"mappings":"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","file":"server.js","sourcesContent":["var http = require('http');\r\nvar url = require(\"url\");//url模块\r\nvar fs = require(\"fs\");//文件系统模块\r\nvar p = require(\"path\");//路径\r\nvar querystring = require(\"querystring\");//参数  \r\nvar Router = require(\"./router\");//自定义路由\r\nvar FileFrom = require(\"../common/fileForm\");\r\nvar MIME = {\r\n    \"css\": \"text/css\",\r\n    \"gif\": \"image/gif\",\r\n    \"html\": \"text/html\",\r\n    \"ico\": \"image/x-icon\",\r\n    \"jpeg\": \"image/jpeg\",\r\n    \"jpg\": \"image/jpeg\",\r\n    \"js\": \"text/javascript\",\r\n    \"json\": \"application/json\",\r\n    \"pdf\": \"application/pdf\",\r\n    \"png\": \"image/png\",\r\n    \"svg\": \"image/svg+xml\",\r\n    \"swf\": \"application/x-shockwave-flash\",\r\n    \"tiff\": \"image/tiff\",\r\n    \"txt\": \"text/plain\",\r\n    \"wav\": \"audio/x-wav\",\r\n    \"wma\": \"audio/x-ms-wma\",\r\n    \"wmv\": \"video/x-ms-wmv\",\r\n    \"xml\": \"text/xml\",\r\n    \"htc\": \"text/x-component\",\r\n    \"svg\": \"image/svg+xml\"\r\n}\r\nhttp.createServer(function (req, res) {\r\n    if (req.url != \"/favicon.ico\") {\r\n        var path = url.parse(req.url).pathname;\r\n        if (path == \"/\") {\r\n            path = \"/index.html\";\r\n        }\r\n        var fpath = p.join(__dirname, path);\r\n        fs.exists(fpath, function (r) {\r\n            if (r) {\r\n                var t = fpath.substring(fpath.lastIndexOf(\".\") + 1).toLowerCase();\r\n                switch (t) {\r\n                    case \"html\":\r\n                    case \"htc\":\r\n                        setHtml(fpath, req, res);\r\n                        break;\r\n                    default:\r\n                        setFile(fpath, req, res);\r\n                        break;\r\n                }\r\n\r\n            }\r\n            else {\r\n                //todo 可为每个请求创建单独的上下文存储路由相关信息\r\n                //可测试多个请求下router值变化问题\r\n                res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n                // res.setHeader(\"Content-Type\", \"application/json;charset=utf-8\");\r\n                var router = new Router();\r\n                if (req.method === \"GET\") {\r\n                    let purl = url.parse(req.url);\r\n                    router.param = querystring.parse(purl.query);\r\n                    router.resolveUrl(req.url);\r\n                    router.redirectAction(req, res);\r\n                }\r\n                else if (req.method === \"POST\") {\r\n                    var arr = [];\r\n                    // req.setEncoding('utf8');\r\n                    req.on(\"data\", (d) => { arr.push(d); console.log(d); });\r\n                    req.on(\"end\", () => {\r\n\r\n                        //判断请求是否包含文件\r\n                        //TODO 接收大文件时，一次性存入内存性能太低\r\n                        if (req.headers['content-type']&&req.headers['content-type'].indexOf('multipart/form-data') > -1) {\r\n                            let bufferData = Buffer.concat(arr);\r\n                            let objList = FileFrom.GetFromList(bufferData, req);\r\n                            // let data = bufferData.toString(), ret;\r\n                            // // let contentType = req.headers['content-type'].split(';');\r\n                            // let boundaryArr = req.headers['content-type'].split(';')[1].split('=');\r\n                            // let boundary = '--' + boundaryArr[1];\r\n                            // let formItemArr = data.split(boundary);\r\n                            // let objList = formItemArr.map((item, index, arr) => {\r\n                            //     let reg = /Content-Disposition: (form-data); name=\"(\\S+)\"(?:; (filename)=\"(\\S+[.]\\S{3,4})\"\\s+Content-Type: (\\S+))?/gi\r\n                            //     // item.replace(/Content-Disposition: (form-data); name=\"(\\s+)\"; (filename)=\"(\\s+[.]\\s{3-4})\"/)\r\n                            //     let obj = { name: null, 'Content-Disposition': null, filename: null, 'Content-Type': null, Content: null };\r\n                            //     let carr = item.split('\\r\\n\\r\\n');\r\n                            //     let cdisc = carr[0];\r\n                            //     cdisc.replace(reg, function (matchstr, contentDisposition, name, filename, filenameValue, fileType, starIndex, sourceString) {\r\n                            //         obj.name = name;\r\n                            //         obj['Content-Disposition'] = contentDisposition;\r\n                            //         obj[filename] = filenameValue;\r\n                            //         obj['Content-Type'] = fileType;\r\n                            //     })\r\n                            //     carr.splice(0, 1);\r\n                            //     let cvalue = carr.join('');\r\n                            //     obj.Content = cvalue.substr(0, cvalue.length - '\\r\\n'.length);\r\n                            //     return obj;\r\n                            // })\r\n                            // console.log(objList);\r\n                            router.files = [];\r\n                            objList.map((item, index, arr) => {\r\n                                if (item.name) {\r\n                                    if (item.filename) {\r\n                                        router.files.push(item);\r\n                                    }\r\n                                    else {\r\n                                        router.param[item.name] = item.Content;\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                        else {\r\n                            let data = Buffer.concat(arr).toString(), ret;\r\n                            try {\r\n                                ret = JSON.parse(data);\r\n                            } catch (err) { }\r\n                            req.body = ret;\r\n                            router.param = ret;\r\n                        }\r\n                        router.resolveUrl(req.url);\r\n                        router.redirectAction(req, res);\r\n                    })\r\n                }\r\n                else if (req.method === \"OPTIONS\") {\r\n                    res.setHeader(\"Access-Control-Allow-Methods\", \"PUT,POST,GET,DELETE,OPTIONS\");\r\n                    res.setHeader(\"Access-Control-Allow-Headers\", \"X-Requested-With, accept, origin, content-type\");\r\n                    res.setHeader(\"X-Powered-By\", ' 3.2.1');\r\n                    res.writeHead(200, { 'Content-Type': 'text/plain;charset:utf-8' });\r\n                    res.end(\"OPTIONS\");\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    else {\r\n        res.writeHead(200);\r\n        res.end(\"favicon.ico\");\r\n    }\r\n\r\n}).listen(8001);\r\nconsole.log(\"http://127.0.0.1:8001\");\r\n/**\r\n * 设置html\r\n * @param {String} 文件路径 \r\n * @param {req} request \r\n * @param {res} response \r\n */\r\nfunction setHtml(path, req, res) {\r\n    fs.readFile(path, function (err, data) {\r\n        if (err) {\r\n            res.writeHead(500, { 'Content-Type': 'text/plain;charset:utf-8' });\r\n            res.end(\"加载文件失败\");\r\n        }\r\n        else {\r\n            var t = path.substring(path.lastIndexOf(\".\") + 1).toLowerCase();\r\n            if (MIME.hasOwnProperty(t)) {\r\n                res.writeHead(200, { 'Content-Type': MIME[t] });\r\n                res.end(data.toString());\r\n            }\r\n            else {\r\n                res.writeHead(200, { 'Content-Type': 'text/plain;charset:utf-8' });\r\n                res.end(\"文件类型错误\" + t);\r\n            }\r\n        }\r\n\r\n    })\r\n}\r\n/**\r\n * 处理二进制文件\r\n * @param {String} path \r\n * @param {req} req \r\n * @param {res} res \r\n */\r\nfunction setFile(path, req, res) {\r\n    var data = fs.readFileSync(path, \"binary\");\r\n    var t = path.substring(path.lastIndexOf(\".\") + 1).toLowerCase();\r\n    if (MIME.hasOwnProperty(t)) {\r\n        res.writeHead(200, { 'Content-Type': MIME[t] });\r\n        res.end(data, \"binary\");\r\n    }\r\n    else {\r\n        res.writeHead(200, { 'Content-Type': 'text/plain;charset:utf-8' });\r\n        res.end(\"文件类型错误\" + t);\r\n    }\r\n}\r\n\r\nfunction sleep(sleepTime) {\r\n    for (var start = +new Date; +new Date - start <= sleepTime;) { }\r\n}\r\n"]}