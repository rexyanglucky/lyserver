{"version":3,"sources":["../../../../src/webserver/pwa/step-08/service-worker.js"],"names":["dataCacheName","cacheName","filesToCache","self","addEventListener","e","console","log","waitUntil","caches","open","then","cache","addAll","keys","keyList","Promise","all","map","key","delete","clients","claim","request","url","dataUrl","indexOf","respondWith","fetch","response","put","clone","match"],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,gBAAgB,gBAApB;AACA,IAAIC,YAAY,qBAAhB;AACA,IAAIC,eAAe;AACjB,GADiB;AAEjB,aAFiB;AAGjB,iBAHiB;AAIjB,oBAJiB;AAKjB,mBALiB;AAMjB,sCANiB;AAOjB,oBAPiB;AAQjB,iBARiB;AASjB,+BATiB;AAUjB,mCAViB;AAWjB,2BAXiB;AAYjB,kBAZiB;AAajB,+BAbiB;AAcjB,mBAdiB;AAejB,kBAfiB;AAgBjB,0BAhBiB;AAiBjB,kBAjBiB,CAAnB;;;AAoBAC,KAAKC,gBAAL,CAAsB,SAAtB,EAAiC,UAASC,CAAT,EAAY;AAC3CC,UAAQC,GAAR,CAAY,yBAAZ;AACAF,IAAEG,SAAF;AACEC,SAAOC,IAAP,CAAYT,SAAZ,EAAuBU,IAAvB,CAA4B,UAASC,KAAT,EAAgB;AAC1CN,YAAQC,GAAR,CAAY,mCAAZ;AACA,WAAOK,MAAMC,MAAN,CAAaX,YAAb,CAAP;AACD,GAHD,CADF;;AAMD,CARD;;AAUAC,KAAKC,gBAAL,CAAsB,UAAtB,EAAkC,UAASC,CAAT,EAAY;AAC5CC,UAAQC,GAAR,CAAY,0BAAZ;AACAF,IAAEG,SAAF;AACEC,SAAOK,IAAP,GAAcH,IAAd,CAAmB,UAASI,OAAT,EAAkB;AACnC,WAAOC,QAAQC,GAAR,CAAYF,QAAQG,GAAR,CAAY,UAASC,GAAT,EAAc;AAC3C,UAAIA,QAAQlB,SAAR,IAAqBkB,QAAQnB,aAAjC,EAAgD;AAC9CM,gBAAQC,GAAR,CAAY,oCAAZ,EAAkDY,GAAlD;AACA,eAAOV,OAAOW,MAAP,CAAcD,GAAd,CAAP;AACD;AACF,KALkB,CAAZ,CAAP;AAMD,GAPD,CADF;;AAUA;;;;;;;;;;AAUA,SAAOhB,KAAKkB,OAAL,CAAaC,KAAb,EAAP;AACD,CAvBD;;AAyBAnB,KAAKC,gBAAL,CAAsB,OAAtB,EAA+B,UAASC,CAAT,EAAY;AACzCC,UAAQC,GAAR,CAAY,wBAAZ,EAAsCF,EAAEkB,OAAF,CAAUC,GAAhD;AACA,MAAIC,UAAU,2CAAd;AACA,MAAIpB,EAAEkB,OAAF,CAAUC,GAAV,CAAcE,OAAd,CAAsBD,OAAtB,IAAiC,CAAC,CAAtC,EAAyC;AACvC;;;;;;;AAOApB,MAAEsB,WAAF;AACElB,WAAOC,IAAP,CAAYV,aAAZ,EAA2BW,IAA3B,CAAgC,UAASC,KAAT,EAAgB;AAC9C,aAAOgB,MAAMvB,EAAEkB,OAAR,EAAiBZ,IAAjB,CAAsB,UAASkB,QAAT,EAAkB;AAC7CjB,cAAMkB,GAAN,CAAUzB,EAAEkB,OAAF,CAAUC,GAApB,EAAyBK,SAASE,KAAT,EAAzB;AACA,eAAOF,QAAP;AACD,OAHM,CAAP;AAID,KALD,CADF;;AAQD,GAhBD,MAgBO;AACL;;;;;AAKAxB,MAAEsB,WAAF;AACElB,WAAOuB,KAAP,CAAa3B,EAAEkB,OAAf,EAAwBZ,IAAxB,CAA6B,UAASkB,QAAT,EAAmB;AAC9C,aAAOA,YAAYD,MAAMvB,EAAEkB,OAAR,CAAnB;AACD,KAFD,CADF;;AAKD;AACF,CA/BD","file":"service-worker.js","sourcesContent":["// Copyright 2016 Google Inc.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n//      http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar dataCacheName = 'weatherData-v1';\nvar cacheName = 'weatherPWA-step-8-1';\nvar filesToCache = [\n  '/',\n  '/index.html',\n  '/scripts/app.js',\n  '/styles/inline.css',\n  '/images/clear.png',\n  '/images/cloudy-scattered-showers.png',\n  '/images/cloudy.png',\n  '/images/fog.png',\n  '/images/ic_add_white_24px.svg',\n  '/images/ic_refresh_white_24px.svg',\n  '/images/partly-cloudy.png',\n  '/images/rain.png',\n  '/images/scattered-showers.png',\n  '/images/sleet.png',\n  '/images/snow.png',\n  '/images/thunderstorm.png',\n  '/images/wind.png'\n];\n\nself.addEventListener('install', function(e) {\n  console.log('[ServiceWorker] Install');\n  e.waitUntil(\n    caches.open(cacheName).then(function(cache) {\n      console.log('[ServiceWorker] Caching app shell');\n      return cache.addAll(filesToCache);\n    })\n  );\n});\n\nself.addEventListener('activate', function(e) {\n  console.log('[ServiceWorker] Activate');\n  e.waitUntil(\n    caches.keys().then(function(keyList) {\n      return Promise.all(keyList.map(function(key) {\n        if (key !== cacheName && key !== dataCacheName) {\n          console.log('[ServiceWorker] Removing old cache', key);\n          return caches.delete(key);\n        }\n      }));\n    })\n  );\n  /*\n   * Fixes a corner case in which the app wasn't returning the latest data.\n   * You can reproduce the corner case by commenting out the line below and\n   * then doing the following steps: 1) load app for first time so that the\n   * initial New York City data is shown 2) press the refresh button on the\n   * app 3) go offline 4) reload the app. You expect to see the newer NYC\n   * data, but you actually see the initial data. This happens because the\n   * service worker is not yet activated. The code below essentially lets\n   * you activate the service worker faster.\n   */\n  return self.clients.claim();\n});\n\nself.addEventListener('fetch', function(e) {\n  console.log('[Service Worker] Fetch', e.request.url);\n  var dataUrl = 'https://query.yahooapis.com/v1/public/yql';\n  if (e.request.url.indexOf(dataUrl) > -1) {\n    /*\n     * When the request URL contains dataUrl, the app is asking for fresh\n     * weather data. In this case, the service worker always goes to the\n     * network and then caches the response. This is called the \"Cache then\n     * network\" strategy:\n     * https://jakearchibald.com/2014/offline-cookbook/#cache-then-network\n     */\n    e.respondWith(\n      caches.open(dataCacheName).then(function(cache) {\n        return fetch(e.request).then(function(response){\n          cache.put(e.request.url, response.clone());\n          return response;\n        });\n      })\n    );\n  } else {\n    /*\n     * The app is asking for app shell files. In this scenario the app uses the\n     * \"Cache, falling back to the network\" offline strategy:\n     * https://jakearchibald.com/2014/offline-cookbook/#cache-falling-back-to-network\n     */\n    e.respondWith(\n      caches.match(e.request).then(function(response) {\n        return response || fetch(e.request);\n      })\n    );\n  }\n});\n"]}