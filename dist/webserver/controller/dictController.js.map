{"version":3,"sources":["../../../src/webserver/controller/dictController.js"],"names":["dictController","bll","Bll","addTopic","req","res","router","param","then","result","code","data","catch","err","stack","addCategory","topicslist","categorylist","deleteCategroy","id","delCategory","module","exports"],"mappings":"aAAA,sC;AACA,qD;AACA;AACA,IAAIA,iBAAiB;AACjBC,SAAK,IAAIC,cAAJ,EADY;;;AAIjB;;;;;;;;AAQAC,aAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2B;AACvB,YAAIC,QAAQD,OAAOC,KAAnB;AACA,aAAKN,GAAL,CAASE,QAAT,CAAkBI,KAAlB,EAAyBC,IAAzB;AACKC,cAAD,IAAY;AACR,wCAAWJ,GAAX,EAAgB,EAAEK,MAAM,CAAR,EAAWC,MAAMF,MAAjB,EAAhB;AACH,SAHL;AAIEG,aAJF,CAIQC,OAAO;AACX,wCAAWR,GAAX,EAAgB,EAAEK,MAAM,CAAR,EAAWC,MAAME,IAAIC,KAArB,EAAhB;AACH,SAND;;AAQH,KAtBgB;AAuBjB;;;;;;AAMAC,gBAAYX,GAAZ,EAAiBC,GAAjB,EAAsBC,MAAtB,EAA8B;AAC1B,YAAIC,QAAQD,OAAOC,KAAnB;AACA,aAAKN,GAAL,CAASc,WAAT,CAAqBR,KAArB,EAA4BC,IAA5B;AACKC,cAAD,IAAY;AACR,wCAAWJ,GAAX,EAAgB,EAAEK,MAAM,CAAR,EAAWC,MAAMF,MAAjB,EAAhB;AACH,SAHL;AAIEG,aAJF,CAIQC,OAAO;AACX,wCAAWR,GAAX,EAAgB,EAAEK,MAAM,CAAR,EAAWC,MAAME,IAAIC,KAArB,EAAhB;AACH,SAND;;AAQH,KAvCgB;AAwCjB;;;;;;;AAOAE,eAAWZ,GAAX,EAAgBC,GAAhB,EAAqBC,MAArB,EAA6B;AACzB,YAAIC,QAAQD,OAAOC,KAAnB;AACA,aAAKN,GAAL,CAASe,UAAT,CAAoBT,KAApB,EAA2BC,IAA3B;AACKC,cAAD,IAAY;AACR,wCAAWJ,GAAX,EAAgB,EAAEK,MAAM,CAAR,EAAWC,MAAMF,MAAjB,EAAhB;AACH,SAHL;AAIEG,aAJF,CAIQC,OAAO,CAAE,4BAAWR,GAAX,EAAgB,EAAEK,MAAM,CAAR,EAAWC,MAAME,IAAIC,KAArB,EAAhB,EAA+C,CAJhE;;AAMH,KAvDgB;AAwDjB;;;;;;AAMAG,iBAAab,GAAb,EAAkBC,GAAlB,EAAuBC,MAAvB,EAA+B;AAC3B,YAAIC,QAAQD,OAAOC,KAAnB;AACA,aAAKN,GAAL,CAASgB,YAAT,CAAsBV,KAAtB,EAA6BC,IAA7B;AACKC,cAAD,IAAY;AACR,wCAAWJ,GAAX,EAAgB,EAAEK,MAAM,CAAR,EAAWC,MAAMF,MAAjB,EAAhB;AACH,SAHL;AAIEG,aAJF,CAIQC,OAAO,CAAE,4BAAWR,GAAX,EAAgB,EAAEK,MAAM,CAAR,EAAWC,MAAME,IAAIC,KAArB,EAAhB,EAA+C,CAJhE;;AAMH,KAtEgB;;AAwEjB;;;;;;;AAOAI,mBAAed,GAAf,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiC;AAC7B,YAAIa,KAAKb,OAAOC,KAAP,CAAaY,EAAtB;AACA,aAAKlB,GAAL,CAASmB,WAAT,CAAqBD,EAArB,EAAyBX,IAAzB,CAA8BC,UAAU;AACpC,wCAAWJ,GAAX,EAAgB,EAAEK,MAAM,CAAR,EAAWC,MAAMF,MAAjB,EAAhB;AACH,SAFD;AAGH,KApFgB,EAArB;;;AAuFAY,OAAOC,OAAP,GAAiBtB,cAAjB","file":"dictController.js","sourcesContent":["import { default as Bll } from \"../../bll/dict\";\nimport { jsonResult } from \"../../common/jsonResult\"\n/** @namespace  */\nlet dictController = {\n    bll: new Bll(),\n\n\n    /**\n     * 添加标签\n     * @param {*} req \n     * @param {*} res \n     * @param {*} router \n     * @param {Object} param \n     * @returns {object} {code:1,data:result}\n     */\n    addTopic(req, res, router) {\n        let param = router.param;\n        this.bll.addTopic(param).then(\n            (result) => {\n                jsonResult(res, { code: 1, data: result })\n            }\n        ).catch(err => {\n            jsonResult(res, { code: 4, data: err.stack })\n        });\n\n    },\n    /**\n     * 添加分类\n     * @param {*} req \n     * @param {*} res \n     * @param {*} router \n     */\n    addCategory(req, res, router) {\n        let param = router.param;\n        this.bll.addCategory(param).then(\n            (result) => {\n                jsonResult(res, { code: 1, data: result })\n            }\n        ).catch(err => {\n            jsonResult(res, { code: 4, data: err.stack })\n        });\n\n    },\n    /**\n     * 获取标签列表\n     * @param {*} req \n     * @param {*} res \n     * @param {*} router \n     * @returns {object} {code:1,data:result}\n     */\n    topicslist(req, res, router) {\n        let param = router.param;\n        this.bll.topicslist(param).then(\n            (result) => {\n                jsonResult(res, { code: 1, data: result })\n            }\n        ).catch(err => { jsonResult(res, { code: 4, data: err.stack }) });\n\n    },\n    /**\n     * 获取分类列表\n     * @param {*} req \n     * @param {*} res \n     * @param {*} router \n     */\n    categorylist(req, res, router) {\n        let param = router.param;\n        this.bll.categorylist(param).then(\n            (result) => {\n                jsonResult(res, { code: 1, data: result })\n            }\n        ).catch(err => { jsonResult(res, { code: 4, data: err.stack }) });\n\n    },\n\n    /**\n     * 删除分类\n     * @param {*} req \n     * @param {*} res \n     * @param {*} router \n     * @param {string} id 文章ID\n     */\n    deleteCategroy(req, res, router) {\n        let id = router.param.id;\n        this.bll.delCategory(id).then(result => {\n            jsonResult(res, { code: 1, data: result })\n        });\n    }\n\n}\nmodule.exports = dictController;"]}