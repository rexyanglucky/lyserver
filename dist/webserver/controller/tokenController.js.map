{"version":3,"sources":["../../../src/webserver/controller/tokenController.js"],"names":["controller","bll","token","accessToken","code","expire","getTime","Date","jsapi_ticket","getshareconfig","req","res","router","url","param","writeHead","end","JSON","stringify","data","timeStamp","noncestr","appid","appSecret","getSignature","then","result","timestamp","nonceStr","signature","appId","getJsapiTicket","Promise","resolve","reject","now","getAccesssToken","jsapiTicketUrl","get","treq","tres","on","parse","ticket","expires_in","err","accessTokenUrl","access_token","signValue","sha1","createHash","update","digest","catch","module","exports"],"mappings":"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","file":"tokenController.js","sourcesContent":["import { default as Bll } from \"../../bll/article\";\r\nimport { Stream } from \"stream\";\r\nimport path from 'path';\r\nimport FileHelper from \"../../common/file\";\r\nimport https from \"https\";\r\nimport crypto from \"crypto\";\r\n\r\n\r\nlet controller = {\r\n    bll: new Bll(),\r\n    token: { accessToken: { code: '', expire: 7200, getTime: new Date() }, jsapi_ticket: { code: '', expire: 7200, getTime: new Date() } },\r\n    getshareconfig(req, res, router) {\r\n        let url = router.param.url;\r\n        if (!url) {\r\n            res.writeHead(200, { 'Content-Type': 'text/plain;charset:utf-8' });\r\n            res.end(JSON.stringify({ code: 2, data: '参数错误' }));\r\n            return false;\r\n        }\r\n        let timeStamp = new Date().getTime();\r\n        let noncestr = \"xiaoliangyu\";\r\n        let appid = 'wx932146c9470bf79c';\r\n        let appSecret = 'a60a48b54ad07a20e8d67fa070e8632e';\r\n        this.getSignature(appid, appSecret, noncestr, timeStamp, url).then((data) => {\r\n            let result = { timestamp: timeStamp, nonceStr: noncestr, signature: data, appId: appid };\r\n            res.writeHead(200, { 'Content-Type': 'text/plain;charset:utf-8' });\r\n            res.end(JSON.stringify({ code: 1, data: result }));\r\n        });\r\n\r\n    },\r\n    getJsapiTicket(appid, appSecret) {\r\n        return new Promise((resolve, reject) => {\r\n            let now = new Date();\r\n            let token = this.token;\r\n            if (token.jsapi_ticket.code && token.jsapi_ticket.getTime.getTime() + token.jsapi_ticket.expire * 1000 >= now.getTime()) {\r\n                resolve(token.jsapi_ticket.code);\r\n            }\r\n            else {\r\n                this.getAccesssToken(appid, appSecret).then((code) => {\r\n                    let jsapiTicketUrl = `https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=${code}&type=jsapi`;\r\n                    https.get(jsapiTicketUrl, function (treq, tres) {\r\n                        let result = '';\r\n                        treq.on('data', function (data) {\r\n                            result += data;\r\n                        });\r\n                        treq.on('end', function () {\r\n                            if ((typeof (result)) === \"string\") {\r\n                                result = JSON.parse(result);\r\n                            }\r\n                            token.jsapi_ticket.code = result.ticket;\r\n                            token.jsapi_ticket.expire = result.expires_in;\r\n                            token.jsapi_ticket.getTime = new Date();\r\n                            resolve(token.jsapi_ticket.code);\r\n\r\n                        });\r\n                        treq.on('error', function (err) {\r\n                            reject(err);\r\n                        })\r\n                    });\r\n                })\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n    },\r\n    getAccesssToken(appId, appSecret) {\r\n        let token = this.token;\r\n        return new Promise((resolve, reject) => {\r\n            // let accessTokenUrl = `https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=wx932146c9470bf79c&secret=a60a48b54ad07a20e8d67fa070e8632e`;\r\n            let accessTokenUrl = `https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=${appId}&secret=${appSecret}`;\r\n            let now = new Date();\r\n            if (token.accessToken.code && token.accessToken.getTime.getTime() + token.accessToken.expire * 1000 >= now.getTime()) {\r\n                resolve(token.accessToken.code)\r\n            }\r\n            else {\r\n                https.get(accessTokenUrl, function (treq, tres) {\r\n                    let result = '';\r\n                    treq.on('data', function (data) {\r\n                        result += data;\r\n                    });\r\n                    treq.on('end', function () {\r\n                        if ((typeof (result)) === \"string\") {\r\n                            result = JSON.parse(result);\r\n                        }\r\n                        token.accessToken.code = result.access_token;\r\n                        token.accessToken.expire = result.expires_in;\r\n                        token.accessToken.getTime = new Date();\r\n                        resolve(token.accessToken.code)\r\n\r\n                    });\r\n                    treq.on('error', function (err) {\r\n                        reject(err);\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n\r\n    },\r\n    getSignature(appid, appSecret, nonceStr, timeStamp, url) {\r\n        return new Promise((resolve, reject) => {\r\n            this.getJsapiTicket(appid, appSecret).then((jsapi_ticket) => {\r\n                let signValue = \"jsapi_ticket=\" + jsapi_ticket + \"&noncestr=\" + nonceStr + \"×tamp=\" + timeStamp + \"&url=\" + url;\r\n                let sha1 = crypto.createHash('sha1');\r\n                sha1.update(signValue);\r\n                let signature = sha1.digest('hex');\r\n                resolve(signature);\r\n            }).catch((err) => { reject(err); });\r\n        })\r\n    }\r\n\r\n\r\n\r\n}\r\n// controller.propotype.token={ accessToken: { code: '', expire: 7200, getTime: new Date() }, jsapi_ticket: { code: '', expire: 7200, getTime: new Date() } };\r\nmodule.exports = controller;"]}